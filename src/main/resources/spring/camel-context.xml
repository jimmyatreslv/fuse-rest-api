<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd          http://camel.apache.org/schema/spring         https://camel.apache.org/schema/spring/camel-spring.xsd">
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration apiContextPath="api-docs"
            component="servlet" enableCORS="true" port="8080">
            <dataFormatProperty key="mustBeJAXBElement" value="false"/>
            <apiProperty key="cors" value="true"/>
            <apiProperty key="api.title" value="API Service"/>
            <apiProperty key="api.version" value="1.0.0"/>
        </restConfiguration>
        <rest path="/api">
        <get id="findPets" produces="application/json,application/json" uri="/pets">
            <description>Returns all pets from the system that the user has access to
    </description>
                <param arrayType="string" collectionFormat="multi" dataType="array" description="tags to filter by" name="tags" required="false" type="query"/>
                <param dataType="integer" description="maximum number of results to return" name="limit" required="false" type="query"/>
                <to uri="direct:findPets"/>
            </get>
            <post consumes="application/json" id="addPet" produces="application/json,application/json" uri="/pets">
                <description>Creates a new pet in the store.  Duplicates are allowed</description>
                <param description="Pet to add to the store" name="body" required="true" type="body"/>
                <to uri="direct:addPet"/>
            </post>
            <get id="findPetById" produces="application/json,application/json" uri="/pets/{id}">
                <description>Returns a user based on a single ID, if the user does not have
    access to the pet</description>
                <param dataType="integer" description="ID of pet to fetch" name="id" required="true" type="path"/>
                <param dataType="integer" description="Pet identifier" name="id" required="true" type="path"/>
                <to uri="direct:findPetById"/>
            </get>
            <delete id="deletePet" produces="application/json" uri="/pets/{id}">
                <description>deletes a single pet based on the ID supplied</description>
                <param dataType="integer" description="ID of pet to delete" name="id" required="true" type="path"/>
                <param dataType="integer" description="Pet identifier" name="id" required="true" type="path"/>
                <to uri="direct:deletePet"/>
            </delete>
        </rest>
        <rest id="say" path="/say">
            <get  produces="application/json" id="get-74731994-c440-49b9-8384-829036d009c7" uri="/hello">
                <to uri="direct:hello"/>
            </get>
            <get  produces="application/json" id="get-c82e6aa9-80e0-4a60-b6c2-fe512ad5cc23" uri="/bye">
                <to uri="direct:bye"/>
            </get>
            <post id="post-6bf37840-b8a2-487f-8537-8dea20814e85" uri="/bye">
                <to uri="mock:update"/>
            </post>
        </rest>
    </camelContext>
</beans>
